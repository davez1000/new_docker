version: '2'

services:

  # Busybox persistent datastore
  datastore:
    extends:
      file: docker-compose-common.yml
      service: datastore

  # Nginx container.
  web:
    extends:
      file: docker-compose-common.yml
      service: web
    build:
      args:
        # 'drupal' OR 'laravel'. Remember to do a docker-compose build and stop/start containers for this to work.
        site_type: 'drupal'
    ports:
      - 8888:80
    links:
      - php
    volumes:
      - .:/var/www

  # PHP-FPM container.
  php:
    extends:
      file: docker-compose-common.yml
      service: php
    ports:
      - 9001:9001
      - 9000:9000
    links:
      - db
#      - testing-mailhog
    environment:
     - XDEBUG_CONFIG=${XDEBUG_CONFIG}
     - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
    volumes:
      - .:/var/www
#    volumes_from:
#      - db

  # Composer container.
  composer:
    extends:
      file: docker-compose-common.yml
      service: composer
#    container_name: composer
#    image: composer/composer

  # MySQL container.
  db:
    extends:
      file: docker-compose-common.yml
      service: db
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes_from:
      - datastore
#    volumes:
#      - ./mysql-data:/var/lib/mysql
#      - /usr/bin

  # Phpmyadmin container.
  phpmyadmin:
    extends:
      file: docker-compose-common.yml
      service: phpmyadmin
    ports:
      - 8080:80
    links:
      - db
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}

  # Mailhog Container
#  mailhog:
#    image: mailhog/mailhog
#    container_name: mailhog
#    working_dir: /home/mailhog
#    ports:
#      - 1025:1025
#      - 8025:8025

  # Portainer Container
  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - 9002:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data

volumes:
  portainer: